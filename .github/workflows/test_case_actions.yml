name: Run Test Case

on:
  push:
    branches: [ "development", "staging", "production" ]
  pull_request:
    branches: [ "development", "staging", "production" ]

jobs:

  build:

    runs-on: ubuntu-latest

    env:
      DB_USERNAME: ${{ secrets.POSTGRES_USER }}
      DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      DB_HOST: ${{ secrets.POSTGRES_HOST }}
      DB_DATABASE: ${{ secrets.POSTGRES_DB }}
      DB_PORT: ${{ secrets.POSTGRES_PORT }}
      ENV_NAME: ${{ secrets.ENV_NAME }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      DEBUG: ${{ secrets.DEBUG }}
      LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

    services:
      postgres_main:
        image: postgres:12
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    strategy:
      matrix:
        python-version: ["3.12"] # ["3.8", "3.9", "3.10"]

    steps:

      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install requirements
        run: |
          pip install -r requirements.txt
      - name: Run Tests
        run: |
          python manage.py test
